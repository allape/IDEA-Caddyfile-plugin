{
  parserClass="cc.allape.caddyfile.language.parser.CaddyfileParser"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="Caddyfile"
  psiImplClassSuffix="Impl"
  psiPackage="cc.allape.caddyfile.language.psi"
  psiImplPackage="cc.allape.caddyfile.language.psi.impl"

  elementTypeHolderClass="cc.allape.caddyfile.language.psi.CaddyfileTypes"
  elementTypeClass="cc.allape.caddyfile.CaddyfileElementType"
  tokenTypeClass="cc.allape.caddyfile.CaddyfileTokenType"

  psiImplUtilClass="cc.allape.caddyfile.CaddyfilePsiImplUtil"
}

caddyfileFile ::= item_*
private item_ ::= (property|COMMENT|CRLF)

property ::= binding? group
{
  methods=[getKey getValue]
}
binding ::= (hostname_matcher port_with_colon?) | port_with_colon
group ::= LEFT_CURLY_BRACE (match_declare|directive)* RIGHT_CURLY_BRACE

colon ::= ":"
port_with_colon ::= colon PORT
host ::= HOSTNAME port_with_colon?

hostname_matcher ::= (TEXT|STAR)(DOT (TEXT|STAR))*

variable ::= (LEFT_CURLY_BRACE VARIABLE_NAME RIGHT_CURLY_BRACE)
quoted_text ::= QUOTATION TEXT QUOTATION
compression_method ::= ("gzip"|"zstd"|"br")

// region matcher

matcher ::= matcher_one|matcher_two|matcher_thr
matcher_one ::= STAR
matcher_two ::= SLASH ((TEXT|STAR) SLASH?)*
matcher_thr ::= AT MATCHER_NAME

// endregion

// region match declare

match_body ::= (match_declare_one|match_declare_two*)
match_directive ::= "match" match_body

match_declare ::= "@" MATCH_NAME match_body

match_declare_one ::= LEFT_CURLY_BRACE match_declare_directive* RIGHT_CURLY_BRACE

match_declare_two ::= (match_declare_two_directive match_declare_two_sep)* match_declare_two_directive
match_declare_two_sep ::= "|"
match_declare_two_directive ::= match_declare_directive

match_declare_not ::= "not"

match_declare_directive ::=
    match_declare_dir_header|
    match_declare_dir_method|
    match_declare_dir_path|
    match_declare_dir_status|

match_declare_dir_header ::= match_declare_not? "header" HEADER HEADER_VALUE?
match_declare_dir_method ::= match_declare_not? "method" METHOD+
match_declare_dir_path ::= match_declare_not? "path" matcher_two+
match_declare_dir_status ::= match_declare_not? "status" STATUS_CODE+

// endregion

// region directive

directive ::=
    abort|
    acme_server|
    basic_auth|
    bind|
    encode|
    error|
    file_server|
    tls|
    redir|
    reverse_proxy|
    respond|

abort ::= "abort" matcher?

acme_server ::= "acme_server" matcher? // not support acme_server for now

basic_auth ::= "basic_auth" matcher? LEFT_CURLY_BRACE (USERNAME PASSWORD)* RIGHT_CURLY_BRACE

bind ::= "bind" (IPV4|IPV6|UNIX_SOCKET)+

encode ::= "encode" matcher? compression_method+ (LEFT_CURLY_BRACE encode_arg* RIGHT_CURLY_BRACE)?

error ::= "error" matcher? (STATUS_CODE|quoted_text STATUS_CODE) (LEFT_CURLY_BRACE error_arg? RIGHT_CURLY_BRACE)?

file_server ::= "file_server" matcher? FILE_SERVER_BROWSE? (LEFT_CURLY_BRACE file_server_arg* RIGHT_CURLY_BRACE)?

tls ::= "tls" FILEPATH FILEPATH

redir ::= "redir" PROTOCOL (TEXT|variable)+

respond ::= "respond" STATUS_CODE

reverse_proxy ::= "reverse_proxy" PROTOCOL host

// endregion

// region encode

encode_arg ::=
    encode_arg_gzip|
    encode_arg_zstd|
    encode_arg_minimum_length|
    match_directive|

encode_arg_gzip ::= "gzip" GZIP_LEVEL?
encode_arg_zstd ::= "zstd"
encode_arg_minimum_length ::= "minimum_length" MINIMUM_LENGTH

// endregion

// region error

error_arg ::=
    error_arg_message

error_arg_message ::= "message" (TEXT|quoted_text)

// endregion

// region file_server

file_server_arg ::=
    file_server_arg_fs|
    file_server_arg_root|
    file_server_arg_hide|
    file_server_arg_index|
    file_server_arg_browse|
    file_server_arg_precompressed|
    file_server_arg_status|
    file_server_arg_disable_canonical_uris|
    file_server_arg_pass_thru|

file_server_arg_fs ::= "fs" BACKEND+
file_server_arg_root ::= "root" FILEPATH
file_server_arg_hide ::= "hide" FILEPATH+
file_server_arg_index ::= "index" TEXT+
file_server_arg_browse ::= "browse" FILEPATH? (LEFT_CURLY_BRACE file_server_arg_browse_arg* RIGHT_CURLY_BRACE)?
file_server_arg_precompressed ::= "precompressed" compression_method+
file_server_arg_status ::= "status" STATUS_CODE
file_server_arg_disable_canonical_uris ::= "disable_canonical_uris"
file_server_arg_pass_thru ::= "pass_thru"

file_server_arg_browse_arg ::= file_server_arg_browse_arg_reveal_symlinks
file_server_arg_browse_arg_reveal_symlinks ::= "reveal_symlinks"

// endregion
